[config]
default_to_workspace = false

[env]
env_file = ".env"

# ===== Build tasks =====
[tasks.compose-up-postgres]
args = ["compose", "up", "-d", "postgres"]
command = "docker"

[tasks.migrate]
dependencies = ["compose-up-postgres"]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }
script = '''
#!/bin/bash
export DATABASE_URL="postgresql://localhost:5432/rsrss?user=postgres&password=password"
echo "DATABASE_URL=$DATABASE_URL"
sqlx migrate run --source data_layer/adapter/migrations
'''

[tasks.sqlx-prepare]
dependencies = ["migrate"]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }
script = '''
#!/bin/bash
cd data_layer/adapter
DATABASE_URL="postgresql://localhost:5432/rsrss?user=postgres&password=password" cargo sqlx prepare
'''

[tasks.before-build]
run_task = [{ name = ["sqlx-prepare"] }]

[tasks.compose-build]
dependencies = ["before-build"]
script = '''
#!/bin/bash
docker compose build --progress=plain --build-arg BUILDKIT_INLINE_CACHE=1
'''

[tasks.compose-build-no-cache]
args = ["compose", "build", "--pull", "--no-cache", "--progress=plain"]
command = "docker"
dependencies = ["before-build"]

# ===== Test tasks =====
[tasks.nextest]
dependencies = ["before-build"]
script = '''
#!/bin/bash
docker run --rm rsrss cargo nextest run --workspace --status-level all --test-threads=1 "${@}"
'''

# ===== Utility tasks =====

[tasks.reformat]
script = '''
#!/bin/bash
cargo fmt -- --emit files
'''

[tasks.migrate-revert]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }
script = '''
#!/bin/bash
migration=$(find data_layer/adapter/migrations -type f -name "*down.sql" | sort -r)
for m in ${migration[@]}; do
  echo "Reverting migrations for $m"
  until sqlx migrate revert --source data_layer/adapter/migrations; do
    sleep 1
  done
done
'''

[tasks.sqlx]
args = ["${@}", "--source", "data_layer/adapter/migrations"]
command = "sqlx"
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }

[tasks.sort-cargo-toml]
args = ["fmt", "--option", "reorder_keys=true"]
command = "taplo"
install_crate = { crate_name = "taplo-cli", binary = "taplo-cli", test_arg = "--help" }

# ====== Documentation tasks ======
[tasks.doc]
dependencies = ["pu2png"]

[tasks.pu2png]
args = ["design/pu2png.sh"]
command = "bash"
dependencies = ["generate-er"]

[tasks.generate-er]
args = ["design/generate-er.sh"]
command = "bash"
install_crate = { crate_name = "sqlant", binary = "sqlant", test_arg = "--help" }

# ====== Command tasks ======
[tasks.start-dashboard]
dependencies = ["before-build"]
script = "docker compose up -d"

[tasks.collect-web-articles]
args = [
  "compose",
  "run",
  "--rm",
  "--entrypoint",
  "",
  "rsrss",
  "/app/target/release/rsrss",
  "collect-articles",
  "${@}",
]
command = "docker"
dependencies = ["before-build"]

[tasks.add-academic-paper]
args = [
  "compose",
  "run",
  "--rm",
  "--entrypoint",
  "",
  "rsrss",
  "/app/target/release/rsrss",
  "add-academic-paper",
  "${@}",
]
command = "docker"
dependencies = ["before-build"]

[tasks.notify-web-articles-to-slack]
command = "docker"
dependencies = ["before-build"]
args = [
  "compose",
  "run",
  "--rm",
  "--entrypoint",
  "",
  "rsrss",
  "/app/target/release/rsrss",
  "notify-web-articles-to-slack",
]
