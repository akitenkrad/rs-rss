@startuml class_diagram_crawler

package Internet <<Cloud>> {
}

package ApplicationLayer as AL {
    package crawler {
        package sites {
            struct AnySite
            note left: Implements the Site\ninterface for every site
        }
        package model {
            struct WebResource {
            }
        }
    }
}

package MiddleLayer as ML {

    package kernel {
        package model {
            struct WebArticle {
                +from<WebArticleRecord>()
                +from<WebResource>()
            }
        }
        package repository {
            package web_article {
                interface WebArticleRepository {
                    +create()
                    +read()
                    +update()
                    +delete()
                }
            }
        }
    }
    package registry {
        struct AppRegistry {
            +web_article_repository
        }
    }
}

package DataLayer as DL {
    package adapter {
       package repository {
            package web_article {
                struct WebArticleRepositoryImpl {
                    +create()
                    +read()
                    +update()
                    +delete()
                }
            }
        }
        package model {
            struct WebArticleRecord {
                +from<WebArticle>()
            }
        }
    }
}

database PostgreSQL {
    entity WebArticle
}

'Data Flow
Internet --> AL.crawler.sites.AnySite:data flow
AL.crawler.sites.AnySite --> AL.crawler.model.WebResource: data flow
AL.crawler.model.WebResource --> ML.kernel.model.WebArticle: data flow
ML.kernel.model.WebArticle --> DL.adapter.model.WebArticleRecord: data flow
DL.adapter.model.WebArticleRecord --> PostgreSQL.WebArticle: data flow
ML.kernel.repository.web_article.WebArticleRepository ..|> DL.adapter.repository.web_article.WebArticleRepositoryImpl: implements

@enduml