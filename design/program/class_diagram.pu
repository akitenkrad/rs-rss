@startuml class_diagram

package Internet <<Cloud>> {
}

package crawler {
    package sites {
        struct AnySite
        note left: Implements the Site\ninterface for every site
    }
    package model {
        struct WebResource
    }
}

package kernel {
    package model {
        Interface Site {
            +String name
            +Category category
            +get_articles(): Vec<WebArticle>
            +parse_article(url: String): (Html, Text)
        }
        struct WebArticle {
            +from<WebResource>
        }
    }
    package repository {
        struct AIRepository {
            +interpret(&mut article: WebArticle)
        }
    }
}

package adapter {
    package model {
        struct WebArticleRecord {
            +from<WebArticle>
        }
    }
    package repository {
        struct WebArticleRepository {
            +create(article: WebArticleRecord)
        }
    }
}

database PostgreSQL {
    entity WebArticle
}


kernel.model.Site ..|> crawler.sites.AnySite
Internet --> crawler.model.WebResource
crawler.model.WebResource --> kernel.model.WebArticle
kernel.model.WebArticle --> adapter.model.WebArticleRecord
adapter.model.WebArticleRecord --> adapter.repository.WebArticleRepository
adapter.repository.WebArticleRepository --> PostgreSQL.WebArticle
@enduml