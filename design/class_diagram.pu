@startuml class_diagram

package Internet <<Cloud>> {
}

package crawler {
    package sites {
        struct AnySite
        note left: Implements the Site\ninterface for every site
    }
    package model {
        struct WebResource {
        }
    }
}

package kernel {
    package model {
        struct WebArticle {
            +from<WebArticleRecord>()
            +from<WebResource>()
        }
    }
    package repository {
        interface WebArticleRepository {
            +create()
            +read()
            +update()
            +delete()
        }
    }
}

package adapter {
    package model {
        struct WebArticleRecord {
            +from<WebArticle>()
        }
    }
    package repository {
        struct WebArticleRepositoryImpl {
            +create()
            +read()
            +update()
            +delete()
        }
    }
}

database PostgreSQL {
    entity WebArticle
}


Internet --> crawler.sites.AnySite:data flow
crawler.sites.AnySite --> crawler.model.WebResource: data flow
crawler.model.WebResource --> kernel.model.WebArticle: data flow
kernel.model.WebArticle --> adapter.model.WebArticleRecord: data flow
adapter.model.WebArticleRecord --> PostgreSQL.WebArticle: data flow

kernel.repository.WebArticleRepository ..|> adapter.repository.WebArticleRepositoryImpl: implements
@enduml