[config]
default_to_workspace = false

[env]
env_file = ".env"

[tasks.compose-up-postgres]
command = "docker"
args = ["compose", "up", "-d", "postgres"]

[tasks.migrate]
dependencies = ["compose-up-postgres"]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }
script = '''
#!/bin/bash
export DATABASE_URL="postgresql://localhost:5432/rsrss?user=postgres&password=password"
echo "DATABASE_URL=$DATABASE_URL"
sqlx migrate run --source data_layer/adapter/migrations
'''

[tasks.sqlx-prepare]
dependencies = ["migrate"]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }
script = '''
#!/bin/bash
cd data_layer/adapter
DATABASE_URL="postgresql://localhost:5432/rsrss?user=postgres&password=password" cargo sqlx prepare
'''

[tasks.before-build]
run_task = [{ name = ["sqlx-prepare"] }]

[tasks.compose-build]
dependencies = ["before-build"]
script = '''
#!/bin/bash
docker compose build --progress=plain --build-arg BUILDKIT_INLINE_CACHE=1
'''

[tasks.compose-build-no-cache]
dependencies = ["before-build"]
command = "docker"
args = ["compose", "build", "--pull", "--no-cache", "--progress=plain"]

[tasks.run]
command = "cargo"
args = ["run", "--release", "${@}"]
dependencies = ["before-build"]

[tasks.run-debug]
command = "cargo"
args = ["run", "${@}"]
dependencies = ["before-build"]

[tasks.run-in-docker]
args = ["compose", "run", "--rm", "rsrss", "${@}"]
command = "docker"
dependencies = ["before-build"]
env_files = [".env"]

[tasks.logs]
command = "docker"
args = ["compose", "logs", "${@}"]
dependencies = ["before-build"]

[tasks.build]
command = "cargo"
args = ["build", "${@}"]
dependencies = ["before-build"]

[tasks.reformat]
script = '''
#!/bin/bash
cargo fmt -- --emit files
'''

[tasks.nextest]
dependencies = ["before-build"]
script = '''
#!/bin/bash
docker run --rm rsrss cargo nextest run --workspace --status-level all --test-threads=1 "${@}"
'''

[tasks.start-dashboard]
dependencies = ["before-build"]
script = "docker compose up -d"

[tasks.add-academic-paper]
dependencies = ["before-build"]
command = "docker"
args = [
  "compose",
  "run",
  "--rm",
  "--entrypoint",
  "",
  "rsrss",
  "/app/target/release/rsrss",
  "add-academic-paper",
  "${@}",
]

[tasks.migrate-revert]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }
script = '''
#!/bin/bash
migration=$(find data_layer/adapter/migrations -type f -name "*down.sql" | sort -r)
for m in ${migration[@]}; do
  echo "Reverting migrations for $m"
  until sqlx migrate revert --source data_layer/adapter/migrations; do
    sleep 1
  done
done
'''

[tasks.sqlx]
command = "sqlx"
args = ["${@}", "--source", "data_layer/adapter/migrations"]
install_crate = { crate_name = "sqlx-cli", binary = "sqlx", test_arg = "--help", version = "0.7.3" }

[tasks.sort-cargo-toml]
command = "taplo"
args = ["fmt", "--option", "reorder_keys=true"]
install_crate = { crate_name = "taplo-cli", binary = "taplo-cli", test_arg = "--help" }

## Documentation tasks
[tasks.doc]
dependencies = ["pu2png"]

[tasks.pu2png]
command = "bash"
dependencies = ["generate-er"]
args = ["design/pu2png.sh"]

[tasks.generate-er]
command = "bash"
install_crate = { crate_name = "sqlant", binary = "sqlant", test_arg = "--help" }
args = ["design/generate-er.sh"]
